import { User } from '../types/api';

export type UserRole = 'super-admin' | 'admin' | 'restaurant-owner' | 'restaurant-manager' | 'kitchen-staff' | 'cashier' | 'customer';

// –ò–µ—Ä–∞—Ä—Ö–∏—è —Ä–æ–ª–µ–π –∏ —á—Ç–æ –æ–Ω–∏ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å
export const ROLE_HIERARCHY: Record<UserRole, {
  canCreate: UserRole[];
  description: string;
  color: string;
  priority: number; // —á–µ–º –º–µ–Ω—å—à–µ —á–∏—Å–ª–æ, —Ç–µ–º –≤—ã—à–µ —Ä–æ–ª—å
}> = {
  'super-admin': {
    canCreate: ['super-admin', 'admin', 'restaurant-owner', 'restaurant-manager', 'kitchen-staff', 'cashier', 'customer'],
    description: 'üî• –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ',
    color: 'bg-red-600 text-white',
    priority: 1,
  },
  'admin': {
    canCreate: ['restaurant-owner', 'restaurant-manager', 'kitchen-staff', 'cashier', 'customer'],
    description: '‚ö° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã',
    color: 'bg-purple-600 text-white',
    priority: 2,
  },
  'restaurant-owner': {
    canCreate: ['restaurant-manager', 'kitchen-staff', 'cashier', 'customer'],
    description: 'üëë –í–ª–∞–¥–µ–ª–µ—Ü —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞',
    color: 'bg-green-600 text-white',
    priority: 3,
  },
  'restaurant-manager': {
    canCreate: ['kitchen-staff', 'cashier', 'customer'],
    description: 'üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞',
    color: 'bg-blue-600 text-white',
    priority: 4,
  },
  'kitchen-staff': {
    canCreate: [],
    description: 'üë®‚Äçüç≥ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –∫—É—Ö–Ω–∏',
    color: 'bg-orange-600 text-white',
    priority: 5,
  },
  'cashier': {
    canCreate: [],
    description: 'üí∞ –ö–∞—Å—Å–∏—Ä',
    color: 'bg-purple-500 text-white',
    priority: 6,
  },
  'customer': {
    canCreate: [],
    description: 'üë§ –ö–ª–∏–µ–Ω—Ç',
    color: 'bg-gray-600 text-white',
    priority: 7,
  },
};

// –°—Ç–∞—Ç—É—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const USER_STATUSES = {
  ACTIVE: 'active' as const,
  INACTIVE: 'inactive' as const,
  SUSPENDED: 'suspended' as const,
} as const;

export type UserStatus = typeof USER_STATUSES[keyof typeof USER_STATUSES];

// –¶–≤–µ—Ç–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
export const STATUS_COLORS: Record<UserStatus, string> = {
  active: 'bg-green-100 text-green-800',
  inactive: 'bg-gray-100 text-gray-800',
  suspended: 'bg-red-100 text-red-800',
};

// –ß–∏—Ç–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤
export const STATUS_LABELS: Record<UserStatus, string> = {
  active: '–ê–∫—Ç–∏–≤–µ–Ω',
  inactive: '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω',
  suspended: '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
};

// –ß–∏—Ç–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π
export const ROLE_LABELS: Record<UserRole, string> = {
  'super-admin': '–°—É–ø–µ—Ä –ê–¥–º–∏–Ω',
  'admin': '–ê–¥–º–∏–Ω',
  'restaurant-owner': '–í–ª–∞–¥–µ–ª–µ—Ü',
  'restaurant-manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
  'kitchen-staff': '–ö—É—Ö–Ω—è',
  'cashier': '–ö–∞—Å—Å–∏—Ä',
  'customer': '–ö–ª–∏–µ–Ω—Ç',
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
export const canUserCreateRole = (currentUserRole: UserRole, targetRole: UserRole): boolean => {
  return ROLE_HIERARCHY[currentUserRole].canCreate.includes(targetRole);
};

export const getAvailableRoles = (currentUserRole: UserRole): UserRole[] => {
  return ROLE_HIERARCHY[currentUserRole].canCreate;
};

export const getRoleDisplayName = (role: UserRole): string => {
  return ROLE_LABELS[role] || role;
};

export const getRoleDescription = (role: UserRole): string => {
  return ROLE_HIERARCHY[role].description;
};

export const getRoleColor = (role: UserRole): string => {
  return ROLE_HIERARCHY[role].color;
};

export const getStatusColor = (status: UserStatus): string => {
  return STATUS_COLORS[status];
};

export const getStatusLabel = (status: UserStatus): string => {
  return STATUS_LABELS[status];
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ä–æ–ª—å —Å–∏—Å—Ç–µ–º–Ω–æ–π (—Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±—ã—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π)
export const isSystemRole = (role: UserRole): boolean => {
  return ['super-admin', 'admin'].includes(role);
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±—É–µ—Ç –ª–∏ —Ä–æ–ª—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω
export const roleRequiresRestaurant = (role: UserRole): boolean => {
  return ['restaurant-owner', 'restaurant-manager', 'kitchen-staff', 'cashier'].includes(role);
};

// –ü–æ–ª—É—á–∏—Ç—å –≥–ª–∞–≤–Ω—É—é —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ)
export const getUserPrimaryRole = (user: User): UserRole => {
  if (user.roles && user.roles.length > 0) {
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ–ª–∏ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∏ –±–µ—Ä–µ–º —Å–∞–º—É—é –≤—ã—Å–æ–∫—É—é
    const sortedRoles = user.roles
      .map(r => r.name as UserRole)
      .filter(role => Object.keys(ROLE_HIERARCHY).includes(role))
      .sort((a, b) => ROLE_HIERARCHY[a].priority - ROLE_HIERARCHY[b].priority);
    
    return sortedRoles[0] || user.role;
  }
  return user.role;
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const canEditUser = (currentUser: User, targetUser: User): boolean => {
  const currentRole = getUserPrimaryRole(currentUser);
  const targetRole = getUserPrimaryRole(targetUser);
  
  // –ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  if (currentUser.id === targetUser.id) return false;
  
  // –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö
  if (currentRole === 'super-admin') return true;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∏–µ—Ä–∞—Ä—Ö–∏–∏
  return ROLE_HIERARCHY[currentRole].priority < ROLE_HIERARCHY[targetRole].priority;
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const canDeleteUser = (currentUser: User, targetUser: User): boolean => {
  // –¢–µ –∂–µ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–æ –∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  return canEditUser(currentUser, targetUser);
};

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–æ–ª–µ–π –¥–ª—è —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getCreateUserRoleOptions = (currentUserRole: UserRole) => {
  return getAvailableRoles(currentUserRole).map(role => ({
    value: role,
    label: getRoleDisplayName(role),
    description: getRoleDescription(role),
    color: getRoleColor(role),
    requiresRestaurant: roleRequiresRestaurant(role),
  }));
}; 